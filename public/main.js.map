{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/providers/chat.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--<ul>\\n  <li class=\\\"text\\\" *ngFor=\\\"let chat of chats | async\\\">\\n    {{chat.mensaje}}\\n\\n  </li>\\n</ul>\\n-->\\n<div class=\\\"container main-container\\\">\\n  <h1>Firechat</h1>\\n\\n  <div class=\\\"col-md-12 text-right\\\" *ngIf=\\\"chatService.usuario.uid\\\">\\n    <button (click)=\\\"chatService.logout()\\\" type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" name=\\\"button\\\">Salir</button>\\n\\n  </div>\\n  <app-login *ngIf=\\\"!chatService.usuario.uid\\\"></app-login>\\n\\n\\n  <div class=\\\"chat-window\\\" *ngIf=\\\"chatService.usuario.uid\\\">\\n    <app-chat></app-chat>\\n  </div>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\nimport {ChatService} from './providers/chat.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(public chatService:ChatService) {\n    \n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\n\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireStorageModule } from 'angularfire2/storage';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AppComponent } from './app.component';\nimport { ChatComponent } from './components/chat/chat.component';\nimport {FormsModule} from '@angular/forms';\n\n//servicios\nimport {ChatService} from './providers/chat.service';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n     AngularFireModule.initializeApp(environment.firebase),\n     AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n    AngularFireAuthModule,\n    FormsModule\n  ],\n  providers: [\n    ChatService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h1>Chat</h1>\\n<hr>\\n<div class=\\\"app-mensajes\\\" id=\\\"app-mensajes\\\">\\n  <div [ngClass]=\\\"{'text-right': chatService.usuario.uid == chat.uid}\\\" *ngFor=\\\"let chat of chatService.chats\\\">\\n    <span class=\\\"badge \\\" [ngClass]=\\\"{'badge-primary': chatService.usuario.uid == chat.uid, 'badge-success':chatService.usuario.uid != chat.uid }\\\">{{chat.nombre}}</span>\\n    <p>{{chat.mensaje}}</p>\\n\\n  </div>\\n\\n\\n\\n\\n\\n</div>\\n<input type=\\\"text\\\" class=\\\"form-control\\\" (keyup.enter)=\\\"enviarMensaje()\\\" name=\\\"\\\" [(ngModel)]=\\\"mensaje\\\" placeholder=\\\"Enviar mensaje\\\" value=\\\"\\\">\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ChatService} from '../../providers/chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styles: []\n})\nexport class ChatComponent implements OnInit {\n\n  mensaje:string=\"\";\n  elemento: any;\n  constructor( public chatService:ChatService) {\n    this.chatService.cargarMensaje().subscribe(()=>{\n      setTimeout(()=>{\n        this.elemento.scrollTop= this.elemento.scrollHeight;\n      }, 20);\n\n    });\n   }\n\n  ngOnInit() {\n    this.elemento=document.getElementById('app-mensajes')\n  }\n\n  enviarMensaje(){\n    if (this.mensaje.length===0) {\n      return;\n\n    }\n    this.chatService.agregarMensaje(this.mensaje)\n          .then(()=>this.mensaje=\"\")\n          .catch((err)=>console.error(\"Error al enviar\", err));\n\n\n\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12 text-center\\\">\\n    <p>Entrar al chat con su cuenta</p>\\n    <button style=\\\"margin: 10px\\\" type=\\\"button\\\" (click)=\\\"ingresar('google')\\\" class=\\\"btn btn-outline-primary\\\" name=\\\"button\\\">Google</button>\\n    <button style=\\\"margin: 10px\\\" type=\\\"button\\\" (click)=\\\"ingresar('twitter')\\\" class=\\\"btn btn-outline-info\\\" name=\\\"button\\\">Twitter</button>\\n\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ChatService} from '../../providers/chat.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public chatService:ChatService) { }\n\n  ingresar(proveedor:string){\n    this.chatService.login(proveedor);\n  }\n\n  ngOnInit() {\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport {Mensaje} from '../interface/mensaje.interface';\nimport { map } from 'rxjs/operators';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { auth } from 'firebase';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  private itemsCollection: AngularFirestoreCollection<Mensaje>;\n  public chats:Mensaje[]=[];\n  public usuario:any={};\n\n  constructor(private afs: AngularFirestore,\n              public afAuth: AngularFireAuth) {\n\n    this.afAuth.authState.subscribe(user=>{\n      console.log(\"Estado de usuario\", user);\n\n      if (!user) {\n          return;\n      }\n      this.usuario.nombre= user.displayName;\n      this.usuario.uid=user.uid;\n    })\n\n  }\n\n  login(proveedor:string) {\n    this.afAuth.auth.signInWithPopup(new auth.GoogleAuthProvider());\n  }\n  logout() {\n    this.usuario={};\n    this.afAuth.auth.signOut();\n  }\n\n  cargarMensaje(){\n     this.itemsCollection = this.afs.collection<Mensaje>('chats', ref=> ref.orderBy('fecha', 'desc').limit(5));\n     return this.itemsCollection.valueChanges().pipe(map(mensajes=>{\n       console.log(mensajes);\n       this.chats=[];\n       for (let mensaje of mensajes) {\n           this.chats.unshift(mensaje);\n       }\n       return this.chats;\n     }))\n  }\n\n  agregarMensaje( texto:string){\n    //TODO falta uid de usuario\n    let mensaje: Mensaje={\n      nombre:this.usuario.nombre,\n      mensaje: texto,\n      fecha: new Date().getTime(),\n      uid: this.usuario.uid\n    }\n    return this.itemsCollection.add(mensaje);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyA33-szyyTQd8tUBSoI_Nlw7LsucV5wmgI\",\n    authDomain: \"firechat-f7b1b.firebaseapp.com\",\n    databaseURL: \"https://firechat-f7b1b.firebaseio.com\",\n    projectId: \"firechat-f7b1b\",\n    storageBucket: \"firechat-f7b1b.appspot.com\",\n    messagingSenderId: \"596732331924\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}